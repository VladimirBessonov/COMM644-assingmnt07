{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts","src/mvc/Controller.ts","src/mvc/Model.ts","src/mvc/View.ts","src/tasks/Math.ts","src/tasks/String.ts","src/tasks/dates.ts","src/tasks/deathby.ts","src/util/Task.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Model_1","__importDefault","View_1","Controller_1","app","default","Controller","model","view","_this","this","onTodoListChanged","activeTab","todos","displayTodos","handleToggleTodo","id","toggleTodo","handleDeleteTodo","deleteTodo","handleRestartTodo","restartTodos","handleActiveTask","selectActiveTask","handleActiveTab","selectActiveTab","handleExecuteTask","value","executeTask","bindTodoListChanged","bindToggleTodo","bindDeleteTodo","bindRestartTodo","bindSelectActiveTask","bindSelectActiveTab","bindExecuteTask","String_1","Math_1","dates_1","deathby_1","appTask","Singleton","getInstance","initTask","List","Model","prototype","callback","_commit","localStorage","setItem","JSON","stringify","todoList","map","todo","text","active","complete","handler","filter","console","log","restartQuiz","list","activeTask","addList","getItem","parse","View","menu","firstChild","removeChild","displayTasks","currentTodos","item","li","createElement","textContent","name","append","restartButton","innerText","forEach","checkbox","type","checked","radio","setAttribute","span","contentEditable","classList","add","strike","deleteButton","getElement","selector","document","querySelector","tag","className","element","_initLocalListeners","input","addEventListener","event","target","_temporaryTodoText","parseInt","parentElement","preventDefault","el","_activeTab","__spreadArrays","parentNode","children","indexOf","matches","execButton","placeholder","title","myNumber","prompt","Math","abs","parseFloat","ceil","floor","arr","split","max","apply","min","sqrt","alert","orderNumber","surname","fullname","concat","array","searchWord","index","wordIndex","undefined","sentence","replacement","replace","search","new_string","slice","toLowerCase","trim","toUpperCase","mth","Date","getDate","giorni","anno","mesi","dateInput","date","toLocaleString","month","data","isDate","getDay","dataIeri","setDate","weekday","first","dotw","userDate","toString","dayofweek","sort","Array","from","phrase","sent","charAt","substring","join","firstCap","phrase2","vowels","numVowels","_i","_a","letter","includes","counter","ltr","count","vcount","random","substr","random2","country","one","two","Task","taskList","push","instance"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Model from \"./mvc/Model\";\nimport View from \"./mvc/View\";\nimport Controller from \"./mvc/Controller\";\n\nexport const app = new Controller(new Model(), new View())","import Model from \"./Model\";\nimport View from \"./View\";\n\nclass Controller {\n    model: Model\n    view: View\n    constructor(model : Model, view: View) {\n        this.model = model\n        this.view = view\n\n        this.model.bindTodoListChanged(this.onTodoListChanged)\n        this.view.bindToggleTodo(this.handleToggleTodo)\n        this.view.bindDeleteTodo(this.handleDeleteTodo)\n        this.view.bindRestartTodo(this.handleRestartTodo)\n        this.view.bindSelectActiveTask(this.handleActiveTask)\n        this.view.bindSelectActiveTab(this.handleActiveTab)\n        this.view.bindExecuteTask(this.handleExecuteTask)\n\n        this.onTodoListChanged(this.model.activeTab,this.model.todos)\n        // this.onActiveTabChanged(this.model.activeTab,this.model.todos)\n    }\n    onTodoListChanged = (activeTab, todos) => {\n        this.view.displayTodos(activeTab, todos)\n    }\n\n    handleToggleTodo = id => {\n        this.model.toggleTodo(id)\n    }\n    handleDeleteTodo = id => {\n        this.model.deleteTodo(id)\n    }\n    handleRestartTodo = () => {\n        this.model.restartTodos()\n    }\n\n    handleActiveTask = id => {\n        this.model.selectActiveTask(id)\n    }\n    handleActiveTab = id => {\n        this.model.selectActiveTab(id)\n    }\n\n    handleExecuteTask = value => {\n        this.model.executeTask(value)\n    }\n\n\n}\n\nexport default Controller","import {List as StringList} from \"../tasks/String\";\nimport {List as MathList} from \"../tasks/Math\";\nimport {List as DataList} from \"../tasks/dates\";\nimport {List as DeathbyList} from \"../tasks/deathby\";\nimport {Singleton as Task} from \"../util/Task\";\n\nlet appTask = Task.getInstance()\nlet initTask = [StringList, MathList, DataList, DeathbyList]\n\nclass Model {\n    todos: any\n    onTodoListChanged : any\n    activeTask: number | null\n    activeTab: number\n    constructor() {\n        appTask.addList('Strings', StringList)\n        appTask.addList('Math', MathList)\n        appTask.addList('Data', DataList)\n        appTask.addList('Deathby', DeathbyList)\n\n        this.todos = localStorage.getItem('todos') !== null ? JSON.parse(localStorage.getItem('todos')!) : appTask.list   // saying localStorage.getItem('todos') is not null\n        this.activeTask = null\n        this.activeTab = 0\n    }\n\n    bindTodoListChanged(callback) {\n        this.onTodoListChanged = callback\n    }\n\n    _commit(activeTab, todos : any) {\n        this.onTodoListChanged(activeTab, todos)\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }\n\n    toggleTodo(id) {\n        this.todos[this.activeTab].todoList = this.todos[this.activeTab].todoList.map(todo =>\n            todo.id === id ? { id: todo.id, text: todo.text, active: todo.active, complete: !todo.complete, handler: todo.handler } : todo\n        )\n        // this.todos = this.todos.map(todo =>\n        //     todo.id === id ? { id: todo.id, text: todo.text, active: todo.active, complete: !todo.complete, handler: todo.handler } : todo\n        // )\n\n        this._commit(this.activeTab, this.todos)\n    }\n\n    deleteTodo(id) {\n        this.todos[this.activeTab].todoList = this.todos[this.activeTab].todoList.filter(todo => todo.id !== id)\n        console.log(this.todos)\n        this._commit(this.activeTab, this.todos)\n    }\n\n    restartTodos() {\n        console.log('start over')\n        console.log(this.activeTab, initTask[this.activeTab], initTask)\n        appTask.restartQuiz(this.activeTab, initTask)\n        console.log(appTask.list)\n        this.todos =  appTask.list\n        this._commit(this.activeTab, this.todos)\n    }\n\n    executeTask(value) {\n        if (this.activeTask !== null) {\n            let handler = this.todos[this.activeTab].todoList[this.activeTask - 1].handler\n            handler(value)\n\n        }\n    }\n\n    selectActiveTask(id: number) {\n        this.activeTask = id\n    }\n\n    selectActiveTab(id: number) {\n        this.activeTab = id\n        this.onTodoListChanged(this.activeTab, this.todos)\n    }\n\n}\n\nexport default Model;","class View {\n    app: any // add later type of DOM element\n    input : any // add later type of DOM element\n    todoList: any // add later type of DOM element\n    execButton: any\n    title: any\n    menu: any\n    _temporaryTodoText : string\n    _activeTab : number | undefined\n    constructor() {\n        this.app =  this.getElement('#root')\n        this.input = this.createElement('input')\n        this.input.type = 'text'\n        this.input.placeholder = 'Enter here '\n        this.input.name = 'todo'\n        this.execButton = this.createElement('button')\n        this.execButton.innerText = 'EXECUTE TASK'\n        this.title = this.createElement('h1')\n        this.title.textContent = 'JS Practices'\n        this.todoList = this.createElement('ul', 'todo-list')\n        this.menu = this.createElement('ul')\n        this.app.append(this.execButton, this.title, this.menu, this.todoList)\n        this._temporaryTodoText = ''\n        this._activeTab = 0\n        this._initLocalListeners()\n    }\n    displayTodos(activeTab, todos) {\n        // Delete all nodes\n        // for (let item in todos) {\n        //     let li = this.createElement('li')\n        //     li.textContent = todos[item].name\n        //     this.menu.append(li)\n        // }\n        while (this.menu.firstChild) {\n            this.menu.removeChild(this.menu.firstChild)\n        }\n\n        while (this.todoList.firstChild) {\n            this.todoList.removeChild(this.todoList.firstChild)\n        }\n        this.displayTasks(activeTab, todos)\n        // Debugging\n        console.log(todos)\n    }\n\n    displayTasks(activeTab, todos) {\n        let currentTodos = todos[activeTab].todoList\n\n        for (let item in todos) {\n            let li = this.createElement('li')\n            li.textContent = todos[item].name\n            this.menu.append(li)\n        }\n        console.log(currentTodos.length)\n        if (currentTodos.length === 0) {\n            const p = this.createElement('p')\n            p.textContent = 'Nothing to do! Start over?'\n            const restartButton = this.createElement('button')\n            restartButton.innerText = 'RESTART'\n            this.todoList.append(p, restartButton)\n\n        } else {\n            // Create nodes\n            currentTodos.forEach(todo => {\n                const li = this.createElement('li')\n                li.id = todo.id\n\n                const checkbox : any = this.createElement('input')\n                checkbox.type = 'checkbox'\n                checkbox.checked = todo.complete\n                const radio : any = this.createElement('input')\n                radio.type = 'radio'\n                radio.setAttribute(\"name\", \"taskSelector\");\n                radio.checked = todo.active\n\n                const span : any = this.createElement('span')\n                span.contentEditable = true\n                span.classList.add('editable')\n\n                if (todo.complete) {\n                    const strike = this.createElement('s')\n                    strike.textContent = todo.text\n                    span.append(strike)\n                } else {\n                    span.textContent = todo.text\n                }\n\n                const deleteButton = this.createElement('button', 'delete')\n                deleteButton.textContent = 'Delete'\n                li.append(radio, checkbox, span, deleteButton)\n\n                // Append nodes\n                this.todoList.append(li)\n            })\n        }\n\n    }\n\n    getElement(selector: string) {\n        const element = document.querySelector(selector)\n\n        return element\n    }\n    createElement(tag: string, className? : string) {\n        const element = document.createElement(tag)\n\n        if (className) element.classList.add(className)\n\n        return element\n    }\n\n    _initLocalListeners() {\n        this.input.addEventListener('input', event => {\n            let text = event.target.value\n            this._temporaryTodoText = text\n        })\n    }\n\n    bindSelectActiveTask(handler) {\n        this.todoList.addEventListener('change', event => {\n            if (event.target.type === 'radio') {\n                const id = parseInt(event.target.parentElement.id)\n                handler(id)\n            }\n        })\n    }\n\n    bindSelectActiveTab(handler) {\n        this.menu.addEventListener('click', event => {\n            event.preventDefault()\n            let el = event.target\n            this._activeTab = [...el.parentNode.children].indexOf(el)\n            console.log(this._activeTab)\n            handler(this._activeTab)\n        })\n    }\n\n    bindToggleTodo(handler) {\n        this.todoList.addEventListener('change', event => {\n            if (event.target.type === 'checkbox') {\n                const id = parseInt(event.target.parentElement.id)\n                handler(id)\n            }\n        })\n    }\n\n    bindRestartTodo(handler) {\n        this.todoList.addEventListener('click', event => {\n            if (event.target.matches('button') && event.target.innerText == 'RESTART') {\n                console.log('RestartTodo')\n                handler()\n            }\n        })\n    }\n\n    bindDeleteTodo(handler) {\n        this.todoList.addEventListener('click', event => {\n            if (event.target.className === 'delete') {\n                const id = parseInt(event.target.parentElement.id)\n                console.log('DeleteTodo')\n                handler(id)\n            }\n        })\n    }\n\n    bindExecuteTask(handler) {\n        this.execButton.addEventListener('click', (event) => {\n            handler()\n        })\n    }\n\n}\n\nexport default View;","const handlerStep1 = () => {\n    let myNumber: number = parseInt(prompt('Step 1 - enter a positive or negative number', '10')!);\n    console.log(\"Step 1: \" + Math.abs(myNumber));\n}\n\nconst handlerStep2 = () => {\n    let myNumber: number = parseFloat(prompt('Step 2 - enter number with a decimal', '10.5')!);\n    console.log(\"Step 2: \" + Math.ceil(myNumber));\n}\nconst handlerStep3 = () => {\n    let myNumber: number = parseFloat(prompt('Step 3 - enter another number with a decimal', '20.5')!);\n    console.log(\"Step 3: \" + Math.floor(myNumber));\n}\n\nconst handlerStep4 = () => {\n    let myNumber: string = prompt('Step 4 - enter five numbers separated by comma (1,2,3)', '1,2,3,4,5')!;\n    let myNubmerSplit  = myNumber.split(\",\")\n    let arr = myNubmerSplit.map( item => parseFloat(item))\n    console.log(\"Step 4 - \" + \"largest number: \" + Math.max.apply(null, arr) + \" smallest number: \" + Math.min.apply(null, arr));\n\n}\nconst handlerStep5 = () => {\n    let myNumber: number = parseFloat(prompt('Step 6 - enter another number with a decimal', '16')!);\n    console.log(\"Step 5: \" + Math.sqrt(myNumber));\n}\n\nexport const List = [{id: 1, text: '1.\tCreate an application that prompts the user for a number. Regardless of whether ' +\n        'they enter a negative or positive number, make sure to display the positive version of that number in the console ' +\n        'window. If I enter -15 in the prompt and -15 is displayed in the console window, ' +\n        'you did this one wrong.', complete: false,  active: false, handler: handlerStep1 },\n             {id: 2, text: '2.\tCreate an application that prompts the user for a floating point value (decimal). Store the ' +\n            'result of that input in a variable and then round it up to the nearest whole number. Display the result ' +\n            'within a console window.', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: '3.\tCreate an application that prompts the user for a floating point value (decimal). Store the ' +\n            'result of that input in a variable and then round it down to the nearest whole number. Display the result' +\n            ' within a console window.', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: '4.\tCreate an application that prompts the user for 5 numbers. Ask them to comma delimit each number' +\n            ' so you get 1,2,3,4,5 for example. Store the result of that input in a variable and then find the largest ' +\n            'and smallest numbers in that list. Display both of those numbers ' +\n            'within a console window.', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: '5.\tCreate an application that prompts the user for a number. Now find the square root of that number' +\n            ' and display the result within a console window. ', complete: false,  active: false, handler: handlerStep5}\n\n]","//STEP 1\nconst handlerStep1 = () => {\n    let name : string | null = prompt('Enter you Name')\n    if (name !== null) { alert(`Your name is ${name.length} long`)}\n}\n//STEP 2\nconst handlerStep2 = () => {\n    let name : string | null = prompt('Enter you Name')\n    let orderNumber  = parseInt(prompt('Enter number of letter you want to find')!)\n    if (name !== null) {\n        if (orderNumber < name.length) {\n            alert(`The letter is  ${name[orderNumber - 1]} long`)} else {\n            alert(`Your name is ${name.length} character long, the letter is out of the range. `)\n        }\n        }\n}\n//STEP 3\nconst handlerStep3 = () => {\n    let name : string  = prompt('Enter you Name')!\n    let surname : string  = prompt('Enter you Name')!\n    let fullname = name.concat(' ', surname)\n    alert(`Your name is ${fullname}`)\n}\n//STEP 4\nconst handlerStep4 = () => {\n    let sentence = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy dog')!\n    let array = sentence.split(' ')\n    let searchWord= prompt('enter the word to find it index or leave default', 'fox')!\n    let index = array.indexOf(searchWord)\n    alert(index)\n\n}\n//STEP 5\nconst handlerStep5 = () => {\n    let sentence = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy fox')!\n    let array = sentence.split(' ')\n    let searchWord= prompt('enter the word to find it index or leave default', 'fox')!\n    let wordIndex: number | undefined;\n    array.forEach( (item, index) => {\n        if (item === searchWord) {\n            wordIndex = index\n        }\n    })\n\n    if (wordIndex !== undefined) {\n        alert(`last index of ${searchWord} in the sentence is ${wordIndex}`)\n    }\n\n}\n\n//STEP 6\nconst handlerStep6 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', 'The quick brown fox jumped over the lazy dog')!\n    let searchWord : string = prompt('enter your name or leave default', 'monkey')!\n    if (sentence !== 'The quick brown fox jumped over the lazy dog') {\n        let replacement : string = prompt('what you want to replace in the entered sentence?')!\n        sentence.replace(replacement, searchWord)\n    } else {\n        alert(sentence.replace('the lazy dog', searchWord))\n    }\n\n}\n\n//STEP 7\n\nconst handlerStep7 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy dog')!\n    let searchWord : string = prompt('enter the word to find it index or leave default', 'fox')!\n    alert(sentence.search(searchWord))\n\n}\n//STEP 8\nconst handlerStep8 = () => {\n    let old_string : string = \"The quick brown fox jumps over the lazy dog\"\n    let new_string : string = old_string.slice()\n    alert(new_string.slice(-12))\n}\n\n\n//STEP 9\nconst handlerStep9 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', '           THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG          ')!\n    alert(sentence.toLowerCase().trim())\n\n}\n//STEP 10\nconst handlerStep10 = () => {\n    let old_string : string = \"The quick brown fox jumps over the lazy dog\"\n    alert(old_string.toUpperCase())\n}\n\n\n\nexport const List = [{id: 1, text: 'Create an application that prompts the user for their name. Then, find the ' +\n        'length of characters in the person’s name.  Use the alert method to ' +\n        'display the result.', complete: false,  active: false, handler: handlerStep1 },\n    {id: 2, text: 'Create an application that prompts the user for their name. Then, prompt the user for ' +\n            'a numeric value so that they can find the letter in the string based on the number they specify.' +\n            ' Use the alert method to display the result.', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: 'Create an application that prompts the user for their first name. Then, prompt the user for ' +\n            'their last name using a second prompt. Use the alert method to display the text \"Your name is: \"' +\n            ' along with the result of the first name and last name concatenated together. You will use a concatenation ' +\n            'operator to concatenate the literal string with the result ' +\n            'of the String object method’s result', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable. Then, find and display within an alert' +\n            ' the index of the word “fox”.', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy fox” ' +\n            'within a variable. Then, find and display within an alert the index ' +\n            'of the last instance of the word “fox”.', complete: false,  active: false, handler: handlerStep5},\n    {id: 6, text: 'Create an application that stores the text “The quick brown fox jumped over the lazy dog” ' +\n            'within a variable. Then, prompt the user for their full name. Then, replace the text “the lazy' +\n            ' dog” in the variable with the name that the user enters within the prompt. Use the alert method ' +\n            'to display the result.', complete: false,  active: false, handler: handlerStep6},\n    {id: 7, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable. Then, prompt the user for a word. Next, search for the word within the string ' +\n            'that the user enters into the prompt. Use the ' +\n            'alert method to display the result.',complete: false,   active: false, handler: handlerStep7},\n    {id: 8, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable called old_string. Then, use slice(), substr(), or substring() to extract the ' +\n            'words “the lazy dog” from the old_string variable and store that result in a second variable' +\n            ' called new_string. Use the alert method to display' +\n            ' the uppercase result of new_string.', complete: false,  active: false, handler: handlerStep8},\n    {id: 9, text: 'Create an application that stores the text “            ' +\n            'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG          ” ' +\n            'within a variable. Make sure to add space before and after the text so that appears very similar' +\n            ' to the text here. Use the alert method to display the lowercase result of the variable once the' +\n            ' space has been trimmed off.', complete: false,  active: false, handler: handlerStep9},\n    {id: 10, text: 'Create an application that stores the text “the quick brown fox jumps over the lazy dog”' +\n            ' within a variable. The user clearly forgot to capitalize the first letter in the sentence. ' +\n            'Programmatically capitalize the first letter in the sentence' +\n            ' and display the result in an alert.', complete: false,  active: false, handler: handlerStep10},\n]\n\n\n\n","const handlerStep1 = () => {\n    let mth : number = parseInt(prompt('Step 1 - name a month 1 - 12','6')!)\n    let getDaysInMonth = function(month,year) {\n        if (mth == 2){\n            return ('28 days in Feb but every 4 years this month has 29 days');\n        } else {\n            return new Date(year, mth, 0).getDate();\n        }\n    };\n    console.log(getDaysInMonth(1, 1975));\n\n    let anno = parseInt(prompt(\"Step 1(another way) - Enter a year \", \"1998\")!);\n    let mesi = ['gen', 'feb', 'mar', 'apr', 'mai', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'];\n    let giorni;\n\n    for (let i = 0; i < 12; i++) {\n        giorni = new Date(anno, i + 1, 0).getDate();\n        console.log(\"In the year, \" + anno + \", there are \" + giorni + \" days in \" + mesi[i])\n    }\n}\n\nconst handlerStep2 = () => {\n\n    let dateInput = prompt('Step 2 - enter a date');\n    let date = new Date (dateInput!);\n\n    console.log(date);\n    console.log(\"Step 2 \" + 'Month name:', date.toLocaleString('it-IT', {month: 'long'}));\n}\nconst handlerStep3 = () => {\n\n    let isDate = prompt('Step 3 - enter a date');\n    let weekend =  function(isDate){\n        let data = new Date(isDate);\n\n        if(data.getDay() == 6 || data.getDay() == 0)\n        {\n            return \"weekend\";\n        } else {\n            return \"weekday\";\n        }\n    };\n\n    console.log(\"Step 3 \" + isDate + \" is a \" + weekend(isDate));\n}\n\nconst handlerStep4 = () => {\n\n    let ieri =  function(){\n        let dataIeri = new Date();\n        dataIeri.setDate(dataIeri.getDate()-1);\n        return dataIeri.toLocaleString(\"default\", { weekday : \"long\"});\n    };\n\n    console.log(\"Step 4 - yesterday's day of the week was \" + ieri());\n}\nconst handlerStep5 = () => {\n    var dateObj = new Date();\n    var weekday = dateObj.toLocaleString(\"default\", { weekday: \"long\" });\n    console.log(weekday);\n    let first = weekday.slice(0,1);\n    console.log(\"Step 5: \" + first);\n\n    const dotw = new Date();\n    let userDate = prompt(\"Step 5(another way) enter a date\", dotw.toString())!;\n    let dayofweek = new Date(userDate);\n    console.log(\"Step 5: \" + dayofweek.toLocaleString('default', { weekday: 'narrow' }));\n}\n\nexport const List = [{id: 1, text: '1.\tCreate an application that gets the number of days in a month. ' +\n        'Display that result within the console window.', complete: false,  active: false, handler: handlerStep1 },\n    {id: 2, text: '2.\tCreate an application that gets the month name from a particular date. ' +\n            'Display that result within the console window', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: '3.\tCreate an application that tests whether a date is a weekend. ' +\n            'Display that result within the console window', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: '4.\tCreate an application that gets yesterday’s day of the week. For instance, if today is Tuesday,' +\n            ' the console window should display Monday', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: '5.\tCreate an application that gets the current day of the week. The twist here is that I want only ' +\n            'the first letter of the day. If today is Tuesday, the letter T should be ' +\n            'displayed in the console window ', complete: false,  active: false, handler: handlerStep5}\n\n]","const handlerStep1 = () => {\n    let dogs = \"mylifewithdogs\";\n    let life = Array.from(dogs);\n    let sort = life.sort();\n    console.log(sort.toString().replace(/,/g, \"\"));\n}\n\nconst handlerStep2 = () => {\n\n    let phrase = prompt(\"Step 2\", \"enter a phrase\");\n\n    function firstCap(phrase) {\n        let sent = phrase.toLowerCase().split(' ');//change to lowercase and turn into array\n        console.log(sent);\n        for (let i = 0; i < sent.length; i++) {//iterates thru sent array\n            sent[i] = sent[i].charAt(0).toUpperCase() //gets each item in array, grabs the 1st char, changes it to uppercase and\n                + sent[i].substring(1);//gets item in array and adds back in the letters starting at index 1 (because we dont want the first letter again)\n        }\n        return sent.join(' ');//converts array back to string\n    }\n    console.log(\"Step 2 - \" + firstCap(phrase));\n}\nconst handlerStep3 = () => {\n\n    let phrase2 = prompt(\"Step 3\", \"enter another phrase\");\n    let vowels = ['a', 'e', 'i', 'o', 'u'];//specify the vowels\n    let numVowels = 0;//initialize counter\n\n    function counter(text) {\n        for (let letter of text.toLowerCase()) {//loop thru text to see if letter is a vowel\n\n            if( vowels.includes(letter)) {\n                numVowels++;//continue going thru array\n            }\n        }\n        return numVowels;//return vowels\n    }\n    console.log(\"Step 3\" + \" - There are \" + counter(phrase2) + \" vowels in the phrase \" + '\"' + phrase2 + '\"');\n\n//STEP 3 VERSION 2:\n    function vcount(ltr) {\n\n        let vowel = 'aeiouAEIOU';\n        var count = 0;\n\n        for(let i = 0; i < ltr.length ; i++)\n        {\n            if (vowel.indexOf(ltr[i]) !== -1)\n            {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    console.log(\"Step 3 version 2\" + \" - There are \" + vcount(phrase2) + \" vowels in the phrase \" + '\"' + phrase2 + '\"');\n}\n\nconst handlerStep4 = () => {\n\n    let random = Math.random().toString(36).substr(2);//substr(2) removes the 0. in math.random()\n    console.log(\"Step 4 - this generates string of 11 characters: \" + random);//returns 11\n\n    let random2 = Math.random().toString(36).substring(2, 12);//substring (2, 12) returns 10 length (12-2=10) if want more or less, change 12 to another number...\n    console.log(\"Step 4 again - this generates a string of 10 random characters: \" + random2);\n}\nconst handlerStep5 = () => {\n    let country = prompt('Step 5 - list some countries(separated by a comma');\n\n    function bigCountry(country) {\n\n        let longestWord = country.split(', ')//split into array by comma\n            .sort(function(one, two) { //sorts words longest to shortest\n                return two.length - one.length; });//by taking length of one word less another\n\n        return longestWord[0];//then return longest word\n    }\n    console.log(\"Step 5 - The longest country name is \" + bigCountry(country));\n}\n\nexport const List = [{id: 1, text: ' TASK 1', complete: false,  active: false, handler: handlerStep1 },\n    {id: 2, text: 'TASK 2', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: 'TASK 3', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: 'TASK 4', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: 'TASK 5', complete: false,  active: false, handler: handlerStep5}\n]","export class Task {\n\n    // list : Array<[{ name: string, todoList: {id: number, text: string, complete: false, active: boolean, handler: (any) => void}}]> | never\n    list : any\n    constructor() {\n        this.list = []\n    }\n\n    addList(name: string, taskList ) {\n        this.list.push({ name : name, todoList:  taskList })\n    }\n    restartQuiz(index, arr) {\n         console.log(this.list[index])\n         console.log(this.list[index].todoList)\n        console.log(arr)\n        console.log(arr)\n        this.list[index].todoList = arr[index]\n    }\n\n}\n\nexport class Singleton {\n    private static instance : Task\n    // list :  Array<{id: number, text: string, complete: false, active: boolean, handler: (any) => void}>\n    private constructor() {\n\n    }\n\n    static getInstance() {\n        if (!Singleton.instance) {\n            Singleton.instance = new Task()\n        }\n        return Singleton.instance\n    }\n}"]}