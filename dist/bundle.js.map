{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Math.ts","src/String.ts","src/Task.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","List","id","text","complete","active","handler","myNumber","parseInt","prompt","console","log","Math","abs","parseFloat","ceil","floor","arr","split","map","item","max","apply","min","sqrt","name","alert","orderNumber","surname","fullname","concat","array","searchWord","index","indexOf","wordIndex","forEach","undefined","sentence","replacement","replace","search","new_string","slice","toLowerCase","trim","toUpperCase","Task","prototype","addList","taskList","this","list","push","todoList","restartQuiz","Singleton","getInstance","instance","Task_1","String_1","Math_1","appTask","initTask","Model","bindTodoListChanged","callback","onTodoListChanged","_commit","activeTab","todos","localStorage","setItem","JSON","stringify","toggleTodo","todo","deleteTodo","filter","restartTodos","executeTask","value","activeTask","selectActiveTask","selectActiveTab","getItem","parse","View","displayTodos","menu","firstChild","removeChild","displayTasks","_this","currentTodos","li","createElement","textContent","append","restartButton","innerText","checkbox","type","checked","radio","setAttribute","span","contentEditable","classList","add","strike","deleteButton","getElement","selector","document","querySelector","tag","className","element","_initLocalListeners","input","addEventListener","event","target","_temporaryTodoText","bindSelectActiveTask","parentElement","bindSelectActiveTab","preventDefault","el","_activeTab","__spreadArrays","parentNode","children","bindToggleTodo","bindRestartTodo","matches","bindDeleteTodo","bindExecuteTask","execButton","app","placeholder","title","Controller","model","view","handleToggleTodo","handleDeleteTodo","handleRestartTodo","handleActiveTask","handleActiveTab","handleExecuteTask"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const handlerStep1 = () => {\n    let myNumber: number = parseInt(prompt('Step 1 - enter a positive or negative number', '10')!);\n    console.log(\"Step 1: \" + Math.abs(myNumber));\n}\n\nconst handlerStep2 = () => {\n    let myNumber: number = parseFloat(prompt('Step 2 - enter number with a decimal', '10.5')!);\n    console.log(\"Step 2: \" + Math.ceil(myNumber));\n}\nconst handlerStep3 = () => {\n    let myNumber: number = parseFloat(prompt('Step 3 - enter another number with a decimal', '20.5')!);\n    console.log(\"Step 3: \" + Math.floor(myNumber));\n}\n\nconst handlerStep4 = () => {\n    let myNumber: string = prompt('Step 4 - enter five numbers separated by comma (1,2,3)', '1,2,3,4,5')!;\n    let myNubmerSplit  = myNumber.split(\",\")\n    let arr = myNubmerSplit.map( item => parseFloat(item))\n    console.log(\"Step 4 - \" + \"largest number: \" + Math.max.apply(null, arr) + \" smallest number: \" + Math.min.apply(null, arr));\n\n}\nconst handlerStep5 = () => {\n    let myNumber: number = parseFloat(prompt('Step 3 - enter another number with a decimal', '16')!);\n    console.log(\"Step 5: \" + Math.sqrt(myNumber));\n}\n\nexport const List = [{id: 1, text: '1.\tCreate an application that prompts the user for a number. Regardless of whether ' +\n        'they enter a negative or positive number, make sure to display the positive version of that number in the console ' +\n        'window. If I enter -15 in the prompt and -15 is displayed in the console window, ' +\n        'you did this one wrong.', complete: false,  active: false, handler: handlerStep1 },\n             {id: 2, text: '2.\tCreate an application that prompts the user for a floating point value (decimal). Store the ' +\n            'result of that input in a variable and then round it up to the nearest whole number. Display the result ' +\n            'within a console window.', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: '3.\tCreate an application that prompts the user for a floating point value (decimal). Store the ' +\n            'result of that input in a variable and then round it down to the nearest whole number. Display the result' +\n            ' within a console window.', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: '4.\tCreate an application that prompts the user for 5 numbers. Ask them to comma delimit each number' +\n            ' so you get 1,2,3,4,5 for example. Store the result of that input in a variable and then find the largest ' +\n            'and smallest numbers in that list. Display both of those numbers ' +\n            'within a console window.', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: '5.\tCreate an application that prompts the user for a number. Now find the square root of that number' +\n            ' and display the result within a console window. ', complete: false,  active: false, handler: handlerStep5}\n\n]","//STEP 1\nconst handlerStep1 = () => {\n    let name : string | null = prompt('Enter you Name')\n    if (name !== null) { alert(`Your name is ${name.length} long`)}\n}\n//STEP 2\nconst handlerStep2 = () => {\n    let name : string | null = prompt('Enter you Name')\n    let orderNumber  = parseInt(prompt('Enter number of letter you want to find')!)\n    if (name !== null) {\n        if (orderNumber < name.length) {\n            alert(`The letter is  ${name[orderNumber - 1]} long`)} else {\n            alert(`Your name is ${name.length} character long, the letter is out of the range. `)\n        }\n        }\n}\n//STEP 3\nconst handlerStep3 = () => {\n    let name : string  = prompt('Enter you Name')!\n    let surname : string  = prompt('Enter you Name')!\n    let fullname = name.concat(' ', surname)\n    alert(`Your name is ${fullname}`)\n}\n//STEP 4\nconst handlerStep4 = () => {\n    let sentence = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy dog')!\n    let array = sentence.split(' ')\n    let searchWord= prompt('enter the word to find it index or leave default', 'fox')!\n    let index = array.indexOf(searchWord)\n    alert(index)\n\n}\n//STEP 5\nconst handlerStep5 = () => {\n    let sentence = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy fox')!\n    let array = sentence.split(' ')\n    let searchWord= prompt('enter the word to find it index or leave default', 'fox')!\n    let wordIndex: number | undefined;\n    array.forEach( (item, index) => {\n        if (item === searchWord) {\n            wordIndex = index\n        }\n    })\n\n    if (wordIndex !== undefined) {\n        alert(`last index of ${searchWord} in the sentence is ${wordIndex}`)\n    }\n\n}\n\n//STEP 6\nconst handlerStep6 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', 'The quick brown fox jumped over the lazy dog')!\n    let searchWord : string = prompt('enter your name or leave default', 'monkey')!\n    if (sentence !== 'The quick brown fox jumped over the lazy dog') {\n        let replacement : string = prompt('what you want to replace in the entered sentence?')!\n        sentence.replace(replacement, searchWord)\n    } else {\n        alert(sentence.replace('the lazy dog', searchWord))\n    }\n\n}\n\n//STEP 7\n\nconst handlerStep7 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', 'The quick brown fox jumps over the lazy dog')!\n    let searchWord : string = prompt('enter the word to find it index or leave default', 'fox')!\n    alert(sentence.search(searchWord))\n\n}\n//STEP 8\nconst handlerStep8 = () => {\n    let old_string : string = \"The quick brown fox jumps over the lazy dog\"\n    let new_string : string = old_string.slice()\n    alert(new_string.slice(-12))\n}\n\n\n//STEP 9\nconst handlerStep9 = () => {\n    let sentence : string = prompt('enter you sentence or leave default', '           THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG          ')!\n    alert(sentence.toLowerCase().trim())\n\n}\n//STEP 10\nconst handlerStep10 = () => {\n    let old_string : string = \"The quick brown fox jumps over the lazy dog\"\n    alert(old_string.toUpperCase())\n}\n\n\n\nexport const List = [{id: 1, text: 'Create an application that prompts the user for their name. Then, find the ' +\n        'length of characters in the person’s name.  Use the alert method to ' +\n        'display the result.', complete: false,  active: false, handler: handlerStep1 },\n    {id: 2, text: 'Create an application that prompts the user for their name. Then, prompt the user for ' +\n            'a numeric value so that they can find the letter in the string based on the number they specify.' +\n            ' Use the alert method to display the result.', complete: false,  active: false, handler: handlerStep2},\n    {id: 3, text: 'Create an application that prompts the user for their first name. Then, prompt the user for ' +\n            'their last name using a second prompt. Use the alert method to display the text \"Your name is: \"' +\n            ' along with the result of the first name and last name concatenated together. You will use a concatenation ' +\n            'operator to concatenate the literal string with the result ' +\n            'of the String object method’s result', complete: false,  active: false, handler: handlerStep3},\n    {id: 4, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable. Then, find and display within an alert' +\n            ' the index of the word “fox”.', complete: false,  active: false, handler: handlerStep4} ,\n    {id: 5, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy fox” ' +\n            'within a variable. Then, find and display within an alert the index ' +\n            'of the last instance of the word “fox”.', complete: false,  active: false, handler: handlerStep5},\n    {id: 6, text: 'Create an application that stores the text “The quick brown fox jumped over the lazy dog” ' +\n            'within a variable. Then, prompt the user for their full name. Then, replace the text “the lazy' +\n            ' dog” in the variable with the name that the user enters within the prompt. Use the alert method ' +\n            'to display the result.', complete: false,  active: false, handler: handlerStep6},\n    {id: 7, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable. Then, prompt the user for a word. Next, search for the word within the string ' +\n            'that the user enters into the prompt. Use the ' +\n            'alert method to display the result.',complete: false,   active: false, handler: handlerStep7},\n    {id: 8, text: 'Create an application that stores the text “The quick brown fox jumps over the lazy dog” ' +\n            'within a variable called old_string. Then, use slice(), substr(), or substring() to extract the ' +\n            'words “the lazy dog” from the old_string variable and store that result in a second variable' +\n            ' called new_string. Use the alert method to display' +\n            ' the uppercase result of new_string.', complete: false,  active: false, handler: handlerStep8},\n    {id: 9, text: 'Create an application that stores the text “            ' +\n            'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG          ” ' +\n            'within a variable. Make sure to add space before and after the text so that appears very similar' +\n            ' to the text here. Use the alert method to display the lowercase result of the variable once the' +\n            ' space has been trimmed off.', complete: false,  active: false, handler: handlerStep9},\n    {id: 10, text: 'Create an application that stores the text “the quick brown fox jumps over the lazy dog”' +\n            ' within a variable. The user clearly forgot to capitalize the first letter in the sentence. ' +\n            'Programmatically capitalize the first letter in the sentence' +\n            ' and display the result in an alert.', complete: false,  active: false, handler: handlerStep10},\n]\n\n\n\n","export class Task {\n\n    // list : Array<[{ name: string, todoList: {id: number, text: string, complete: false, active: boolean, handler: (any) => void}}]> | never\n    list : any\n    constructor() {\n        this.list = []\n    }\n\n    addList(name: string, taskList ) {\n        this.list.push({ name : name, todoList:  taskList })\n    }\n    restartQuiz(index, arr) {\n         console.log(this.list[index])\n         console.log(this.list[index].todoList)\n        console.log(arr)\n        console.log(arr)\n        this.list[index].todoList = arr[index]\n    }\n\n}\n\nexport class Singleton {\n    private static instance : Task\n    // list :  Array<{id: number, text: string, complete: false, active: boolean, handler: (any) => void}>\n    private constructor() {\n\n    }\n\n    static getInstance() {\n        if (!Singleton.instance) {\n            Singleton.instance = new Task()\n        }\n        return Singleton.instance\n    }\n}","import {Singleton as Task } from \"./Task\";\nimport { List as StringList} from \"./String\";\nimport { List as MathList} from \"./Math\"\n// do I need a singleton here?\nlet appTask = Task.getInstance()\nlet initTask = [StringList, MathList]\nclass Model {\n    todos: any\n    onTodoListChanged : any\n    activeTask: number | null\n    activeTab: number\n    constructor() {\n            appTask.addList('Strings', StringList)\n            appTask.addList('Math', MathList)\n            this.todos = localStorage.getItem('todos') !== null ? JSON.parse(localStorage.getItem('todos')!) : appTask.list   // saying localStorage.getItem('todos') is not null\n            this.activeTask = null\n            this.activeTab = 0\n    }\n\n    bindTodoListChanged(callback) {\n        this.onTodoListChanged = callback\n    }\n\n    _commit(activeTab, todos : any) {\n        this.onTodoListChanged(activeTab, todos)\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }\n\n    toggleTodo(id) {\n        this.todos[this.activeTab].todoList = this.todos[this.activeTab].todoList.map(todo =>\n            todo.id === id ? { id: todo.id, text: todo.text, active: todo.active, complete: !todo.complete, handler: todo.handler } : todo\n        )\n        // this.todos = this.todos.map(todo =>\n        //     todo.id === id ? { id: todo.id, text: todo.text, active: todo.active, complete: !todo.complete, handler: todo.handler } : todo\n        // )\n\n        this._commit(this.activeTab, this.todos)\n    }\n\n    deleteTodo(id) {\n        this.todos[this.activeTab].todoList = this.todos[this.activeTab].todoList.filter(todo => todo.id !== id)\n        console.log(this.todos)\n        this._commit(this.activeTab, this.todos)\n    }\n\n    restartTodos() {\n        console.log('start over')\n        console.log(this.activeTab, initTask[this.activeTab], initTask)\n        appTask.restartQuiz(this.activeTab, initTask)\n        console.log(appTask.list)\n        this.todos =  appTask.list\n        this._commit(this.activeTab, this.todos)\n    }\n\n    executeTask(value) {\n        if (this.activeTask !== null) {\n            let handler = this.todos[this.activeTab].todoList[this.activeTask - 1].handler\n            console.log(this.todos[this.activeTab].todoList[this.activeTask - 1].handler)\n            handler(value)\n\n        }\n    }\n\n    selectActiveTask(id: number) {\n        this.activeTask = id\n    }\n\n    selectActiveTab(id: number) {\n        this.activeTab = id\n        this.onTodoListChanged(this.activeTab, this.todos)\n    }\n\n}\n\nclass View {\n    app: any // add later type of DOM element\n    input : any // add later type of DOM element\n    todoList: any // add later type of DOM element\n    execButton: any\n    title: any\n    menu: any\n    _temporaryTodoText : string\n    _activeTab : number | undefined\n    constructor() {\n        this.app =  this.getElement('#root')\n        this.input = this.createElement('input')\n        this.input.type = 'text'\n        this.input.placeholder = 'Enter here '\n        this.input.name = 'todo'\n        this.execButton = this.createElement('button')\n        this.execButton.innerText = 'EXECUTE TASK'\n        this.title = this.createElement('h1')\n        this.title.textContent = 'JS Practices'\n        this.todoList = this.createElement('ul', 'todo-list')\n        this.menu = this.createElement('ul')\n        this.app.append(this.execButton, this.title, this.menu, this.todoList)\n        this._temporaryTodoText = ''\n        this._activeTab = 0\n        this._initLocalListeners()\n    }\n    displayTodos(activeTab, todos) {\n        // Delete all nodes\n        // for (let item in todos) {\n        //     let li = this.createElement('li')\n        //     li.textContent = todos[item].name\n        //     this.menu.append(li)\n        // }\n        while (this.menu.firstChild) {\n            this.menu.removeChild(this.menu.firstChild)\n        }\n\n        while (this.todoList.firstChild) {\n            this.todoList.removeChild(this.todoList.firstChild)\n        }\n        this.displayTasks(activeTab, todos)\n        // Debugging\n        console.log(todos)\n    }\n\n    displayTasks(activeTab, todos) {\n        let currentTodos = todos[activeTab].todoList\n\n        for (let item in todos) {\n            let li = this.createElement('li')\n            li.textContent = todos[item].name\n            this.menu.append(li)\n        }\n        console.log(currentTodos.length)\n        if (currentTodos.length === 0) {\n            const p = this.createElement('p')\n            p.textContent = 'Nothing to do! Start over?'\n            const restartButton = this.createElement('button')\n            restartButton.innerText = 'RESTART'\n            this.todoList.append(p, restartButton)\n\n        } else {\n            // Create nodes\n            currentTodos.forEach(todo => {\n                const li = this.createElement('li')\n                li.id = todo.id\n\n                const checkbox : any = this.createElement('input')\n                checkbox.type = 'checkbox'\n                checkbox.checked = todo.complete\n                const radio : any = this.createElement('input')\n                radio.type = 'radio'\n                radio.setAttribute(\"name\", \"taskSelector\");\n                radio.checked = todo.active\n\n                const span : any = this.createElement('span')\n                span.contentEditable = true\n                span.classList.add('editable')\n\n                if (todo.complete) {\n                    const strike = this.createElement('s')\n                    strike.textContent = todo.text\n                    span.append(strike)\n                } else {\n                    span.textContent = todo.text\n                }\n\n                const deleteButton = this.createElement('button', 'delete')\n                deleteButton.textContent = 'Delete'\n                li.append(radio, checkbox, span, deleteButton)\n\n                // Append nodes\n                this.todoList.append(li)\n            })\n        }\n\n    }\n\n    getElement(selector: string) {\n        const element = document.querySelector(selector)\n\n        return element\n    }\n    createElement(tag: string, className? : string) {\n        const element = document.createElement(tag)\n\n        if (className) element.classList.add(className)\n\n        return element\n    }\n\n    _initLocalListeners() {\n        this.input.addEventListener('input', event => {\n            let text = event.target.value\n            this._temporaryTodoText = text\n        })\n    }\n\n    bindSelectActiveTask(handler) {\n        this.todoList.addEventListener('change', event => {\n            if (event.target.type === 'radio') {\n                const id = parseInt(event.target.parentElement.id)\n                handler(id)\n            }\n        })\n    }\n\n    bindSelectActiveTab(handler) {\n        this.menu.addEventListener('click', event => {\n            event.preventDefault()\n            let el = event.target\n            this._activeTab = [...el.parentNode.children].indexOf(el)\n            console.log(this._activeTab)\n            handler(this._activeTab)\n        })\n    }\n\n    bindToggleTodo(handler) {\n        this.todoList.addEventListener('change', event => {\n            if (event.target.type === 'checkbox') {\n                const id = parseInt(event.target.parentElement.id)\n                handler(id)\n            }\n        })\n    }\n\n    bindRestartTodo(handler) {\n        this.todoList.addEventListener('click', event => {\n            if (event.target.matches('button') && event.target.innerText == 'RESTART') {\n                console.log('RestartTodo')\n                handler()\n            }\n        })\n    }\n\n    bindDeleteTodo(handler) {\n        this.todoList.addEventListener('click', event => {\n            if (event.target.className === 'delete') {\n                const id = parseInt(event.target.parentElement.id)\n                console.log('DeleteTodo')\n                handler(id)\n            }\n        })\n    }\n\n    bindExecuteTask(handler) {\n        this.execButton.addEventListener('click', (event) => {\n                handler()\n        })\n    }\n// iterate through appTask.list name\n\n\n}\n\nclass Controller {\n    model: Model\n    view: View\n    constructor(model : Model, view: View) {\n        this.model = model\n        this.view = view\n\n        this.model.bindTodoListChanged(this.onTodoListChanged)\n        this.view.bindToggleTodo(this.handleToggleTodo)\n        this.view.bindDeleteTodo(this.handleDeleteTodo)\n        this.view.bindRestartTodo(this.handleRestartTodo)\n        this.view.bindSelectActiveTask(this.handleActiveTask)\n        this.view.bindSelectActiveTab(this.handleActiveTab)\n        this.view.bindExecuteTask(this.handleExecuteTask)\n\n        this.onTodoListChanged(this.model.activeTab,this.model.todos)\n        // this.onActiveTabChanged(this.model.activeTab,this.model.todos)\n    }\n    onTodoListChanged = (activeTab, todos) => {\n        this.view.displayTodos(activeTab, todos)\n    }\n\n    handleToggleTodo = id => {\n        this.model.toggleTodo(id)\n    }\n    handleDeleteTodo = id => {\n        this.model.deleteTodo(id)\n    }\n    handleRestartTodo = () => {\n        this.model.restartTodos()\n    }\n\n    handleActiveTask = id => {\n        this.model.selectActiveTask(id)\n    }\n    handleActiveTab = id => {\n        this.model.selectActiveTab(id)\n    }\n\n    handleExecuteTask = value => {\n        this.model.executeTask(value)\n    }\n\n\n}\n\nexport const app = new Controller(new Model(), new View())"]}